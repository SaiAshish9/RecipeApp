{"version":3,"sources":["Navbar.js","RecipeInput.js","Recipe.js","RecipeList.js","RecipeApp.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","onClick","this","props","onNewRecipe","Component","defaultProps","RecipeInput","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","title","instructions","ingredients","img","handleChange","bind","assertThisInitialized","handleNewIngredient","handleChangeIng","handleSubmit","e","setState","defineProperty","target","name","value","concat","toConsumableArray","index","Number","split","map","ing","i","preventDefault","onSave","objectSpread","_this2","_this$state","onClose","inputs","className","key","type","size","autoComplete","placeholder","onChange","onSubmit","htmlFor","id","style","marginTop","rows","cols","alignSelf","marginRight","Recipe","_this$props","onDelete","src","alt","RecipeList","recipes","r","src_Recipe_0","assign","RecipeApp","nextRecipeId","showForm","handleSave","recipe","prevState","newRecipe","filter","_this3","src_Navbar_0","src_RecipeInput_0","src_RecipeList_0","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_RecipeApp_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8a3354e5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n  static defaultProps = {\r\n    onNewRecipe() {}\r\n  }\r\n  \r\n  static propTypes = {\r\n    onNewRecipe: PropTypes.func\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <header>\r\n        <h2><a>Recipe App</a></h2>\r\n        <nav>\r\n          <li><a onClick={this.props.onNewRecipe}>New Recipe</a></li>\r\n          <li><a>Home</a></li>\r\n          <li><a>About</a></li>\r\n          <li><a>Contact Us</a></li>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport './RecipeInput.css';\r\n\r\nclass RecipeInput extends Component {\r\n  static defaultProps = {\r\n    onClose() {},\r\n    onSave() {}\r\n  }\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      instructions: \"\",\r\n      ingredients: [''],\r\n      img: ''\r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleNewIngredient = this.handleNewIngredient.bind(this);\r\n    this.handleChangeIng = this.handleChangeIng.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  \r\n  handleChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n  \r\n  handleNewIngredient(e) {\r\n    const {ingredients} = this.state;\r\n    this.setState({ingredients: [...ingredients, '']});\r\n  }\r\n  \r\n  handleChangeIng(e) {\r\n    const index = Number(e.target.name.split('-')[1]);\r\n    const ingredients = this.state.ingredients.map((ing, i) => (\r\n      i === index ? e.target.value : ing\r\n    ));\r\n    this.setState({ingredients});\r\n  }\r\n  \r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onSave({...this.state});\r\n    this.setState({\r\n      title: '',\r\n      instructions: '',\r\n      ingredients: [''],\r\n      img: ''\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const {title, instructions, img, ingredients} = this.state;\r\n    const {onClose} = this.props;\r\n    let inputs = ingredients.map((ing, i) => (\r\n      <div\r\n        className=\"recipe-form-line\"\r\n        key={`ingredient-${i}`}\r\n      >\r\n        <label>{i+1}.\r\n          <input\r\n            type=\"text\"\r\n            name={`ingredient-${i}`}\r\n            value={ing}\r\n            size={45}\r\n            autoComplete=\"off\"\r\n            placeholder=\" Ingredient\"\r\n            onChange={this.handleChangeIng} />\r\n        </label>\r\n      </div>\r\n    ));\r\n    \r\n    return (\r\n      <div className=\"recipe-form-container\">\r\n        <form className='recipe-form' onSubmit={this.handleSubmit}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close-button\"\r\n            onClick={onClose}\r\n          >\r\n            X\r\n          </button>\r\n          <div className='recipe-form-line'>\r\n            <label htmlFor='recipe-title-input'>Title</label>\r\n            <input\r\n              id='recipe-title-input'\r\n              key='title'\r\n              name='title'\r\n              type='text'\r\n              value={title}\r\n              size={42}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}/>\r\n          </div>\r\n          <label\r\n            htmlFor='recipe-instructions-input'\r\n            style={{marginTop: '5px'}}\r\n          >\r\n            Instructions\r\n          </label>\r\n          <textarea\r\n            key='instructions'\r\n            id='recipe-instructions-input'\r\n            type='Instructions'\r\n            name='instructions'\r\n            rows='8'\r\n            cols='50'\r\n            autoComplete='off'\r\n            value={instructions}\r\n            onChange={this.handleChange}/>\r\n          {inputs}\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleNewIngredient}\r\n            className=\"buttons\"\r\n          >\r\n            +\r\n          </button>\r\n          <div className='recipe-form-line'>\r\n            <label htmlFor='recipe-img-input'>Image Url</label>\r\n            <input\r\n              id='recipe-img-input'\r\n              type='text'\r\n              placeholder=''\r\n              name='img'\r\n              value={img}\r\n              size={36}\r\n              autoComplete='off'\r\n              onChange={this.handleChange} />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"buttons\"\r\n            style={{alignSelf: 'flex-end', marginRight: 0}}\r\n          >\r\n            SAVE\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RecipeInput;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Recipe.css';\r\n\r\nclass Recipe extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    instructions: PropTypes.string.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n  }\r\n  \r\n  render() {\r\n    const {title, img, instructions, id, onDelete} = this.props;\r\n    const ingredients = this.props.ingredients.map((ing, index) => (\r\n      <li key={index}>{ing}</li> \r\n    ));\r\n    return (\r\n      <div className=\"recipe-card\">\r\n        <div className=\"recipe-card-img\">\r\n          <img src={img} alt={title} />\r\n        </div>\r\n        <div className=\"recipe-card-content\">\r\n          <h3 className=\"recipe-title\">{title}</h3>\r\n          <h4>Ingredients:</h4>\r\n          <ul>\r\n            {ingredients}\r\n          </ul>\r\n          <h4>Instructions:</h4>\r\n          <p>{instructions}</p>\r\n          <button type=\"button\" onClick={() => onDelete(id)}>DELETE</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipe;","import React, {Component} from 'react';\r\nimport Recipe from './Recipe';\r\nimport PropTypes from 'prop-types';\r\nimport './RecipeList.css';\r\n\r\nclass RecipeList extends Component {\r\n  static propTypes = {\r\n    recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n  }\r\n  \r\n  render() {\r\n    const {onDelete} = this.props;\r\n    const recipes = this.props.recipes.map((r,index) => (\r\n      <Recipe key={r.id} {...r} onDelete={onDelete} />\r\n    ));\r\n    \r\n    return (\r\n      <div className=\"recipe-list\">\r\n        {recipes}\r\n      </div>\r\n    )\r\n  \r\n  }\r\n}\r\n\r\nexport default RecipeList;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\nimport RecipeInput from './RecipeInput';\r\nimport RecipeList from './RecipeList';\r\nimport './RecipeApp.css';\r\n\r\nclass RecipeApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipes: [\r\n        {\r\n          id: 0,\r\n          title: \"Spaghetti\",\r\n          instructions: \"Open jar of Spaghetti sauce.  Bring to simmer.  Boil water.  Cook pasta until done.  Combine pasta and sauce\",\r\n          ingredients: [\"pasta\", \"8 cups water\", \"1 box spaghetti\"],\r\n          img: \"spaghetti.jpg\"\r\n        },\r\n        {\r\n          id: 1,\r\n          title: \"Milkshake\",\r\n          instructions: \"Combine ice cream and milk.  Blend until creamy\",\r\n          ingredients: [\"2 Scoops Ice cream\", \"8 ounces milk\"],\r\n          img: \"milkshake.jpg\"\r\n        },\r\n        { \r\n          id: 2,\r\n          title: \"Avocado Toast\",\r\n          instructions: \"Toast bread.  Slice avocado and spread on bread.  Add salt, oil, and pepper to taste.\",\r\n          ingredients: [\"2 slices of bread\", \"1 avocado\", \"1 tablespoon olive oil\", \"1 pinch of salt\", \"pepper\"],\r\n          img: \"avocado_toast.jpg\"\r\n        }\r\n      ],\r\n      nextRecipeId: 3,\r\n      showForm: false\r\n    }\r\n    \r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n  }\r\n  \r\n  handleSave(recipe) {\r\n    this.setState((prevState, props) => {\r\n      const newRecipe = {...recipe, id: this.state.nextRecipeId};\r\n      return {\r\n        nextRecipeId: prevState.nextRecipeId + 1,\r\n        recipes: [...this.state.recipes, newRecipe],\r\n        showForm: false\r\n      }\r\n    });\r\n  }\r\n  \r\n  onDelete(id) {\r\n    const recipes = this.state.recipes.filter(r => r.id !== id);\r\n    this.setState({recipes});\r\n  }\r\n  \r\n  render() {\r\n    const {showForm} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar onNewRecipe={() => this.setState({showForm: true})} />\r\n        { showForm ?\r\n            <RecipeInput \r\n              onSave={this.handleSave}\r\n              onClose={() => this.setState({showForm: false})}  \r\n            /> :\r\n            null }\r\n        <RecipeList onDelete={this.onDelete} recipes={this.state.recipes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeApp;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport RecipeApp from './RecipeApp';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<RecipeApp />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}